name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  RUSTFLAGS: -D warnings

jobs:

  complete:
    if: always()
    needs: [fmt, build, test]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: find . -type f -name '*.rs' -print0 | xargs -I {} -0 rustfmt --check "{}"

  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: wasm32-unknown-unknown
            profile: release
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: dev
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo build --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }}

  test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo test --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }}
